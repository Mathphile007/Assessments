# -*- coding: utf-8 -*-
"""Final_Assessment_LVADSUSR_192_Q3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xGvAFWxYgZcdGhx9p4K7lZ0GGISeVJT1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
import seaborn as sns

#Import data
data = pd.read_csv("/content/customer_segmentation.csv")

data.head(10)

data.isnull().sum()

sns.distplot(data['Income'])
data["Income"].fillna(data['Income'].median(),inplace=True)

data.isnull().sum()

data.info()

data.shape

data.nunique()

data.drop(['Z_CostContact','Z_Revenue','Dt_Customer'],axis=1,inplace=True)#they have only one value so no use and date is not useful

data.dtypes

#One-hot-encoding
data=pd.get_dummies(data, columns = ['Education','Marital_Status'])



#Scale data
scaler = StandardScaler()
scaled_data = scaler.fit_transform(data)

#Identifying K
elbow=[]
silhouette_scores = []
k_values = range(2, 10)
for k in k_values:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(scaled_data)
    elbow.append(kmeans.inertia_)
    silhouette_scores.append(silhouette_score(scaled_data, kmeans.labels_))
plt.plot(k_values, elbow, marker='o')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia(WCSS)')
plt.title('Elbow Curve for Optimal k')
plt.xticks(k_values)
plt.show()

#Model building
optimal_k = 7 #Observing the graph
kmeans = KMeans(n_clusters=optimal_k, random_state=42)
kmeans.fit(scaled_data)
cluster_labels = kmeans.predict(scaled_data)
silhouette = silhouette_score(scaled_data, cluster_labels)
print("Silhouette score: ",silhouette)

#Cluster Profiling
data['Cluster'] = kmeans.labels_
cluster_profiles = data.groupby('Cluster').mean()
print(cluster_profiles)

